[config]
skip_core_tasks = true

[env]
LATEST_SERVER_TAG = { script = ["git -c 'versionsort.suffix=-' tag --list --sort=-v:refname 'automaat-server-*' | awk -F- '{print $NF}'"] }
LATEST_CLIENT_TAG = { script = ["git -c 'versionsort.suffix=-' tag --list --sort=-v:refname 'automaat-web-client-*' | awk -F- '{print $NF}'"] }
CONTAINER_RELEASE_IMG = "blendle/automaat:server-v${LATEST_SERVER_TAG}_web-client-v${LATEST_CLIENT_TAG}"
CONTAINER_DEVELOP_IMG = "blendle/automaat:latest"
SERVER_ROOT = "${CARGO_MAKE_WORKING_DIRECTORY}/src/web-client/static"
DATABASE_URL = "postgres://postgres@localhost"
ENCRYPTION_SECRET = "default secret"

[tasks.test]
description = "Run all tests."
category = "Development"
workspace = false
dependencies = [
  "test::prettier-1",
  "test::prettier-2",
  "test::fmt",
  "test::build",
  "test::break-cache",
  "test::clippy",
  "test::unit",
  "test::doc",
  "web-client::test"
]

[tasks.watch]
description = "Watch for file changes, build the web client and run the server. The worker is not started."
category = "Development"
workspace = false
watch = { ignore_pattern = "{tmp/**/*,src/web-client/static/app/**/*,src/web-client/static/css/style.css,src/web-client/static/css/style.css.map}" }
script = [
  '''
  cargo make --cwd src/web-client debug && \
  cargo make run-server
  '''
]

[tasks.watch-server]
description = "Watch for file changes and run the server."
category = "Development"
workspace = false
watch = { ignore_pattern = "{tmp/**/*,src/web-client/static/app/**/*,src/web-client/static/css/style.css,src/web-client/static/css/style.css.map}" }
command = "cargo"
args = ["make", "run-server"]

[tasks.watch-worker]
description = "Watch for file changes and run the worker."
category = "Development"
workspace = false
watch = { ignore_pattern = "{tmp/**/*,src/web-client/static/app/**/*,src/web-client/static/css/style.css,src/web-client/static/css/style.css.map}" }
command = "cargo"
args = ["make", "run-worker"]

[tasks.run-server]
description = "Run the API server."
category = "Development"
workspace = false
command = "cargo"
args = ["run", "--all-features", "--", "server"]

[tasks.run-worker]
description = "Run the API worker."
category = "Development"
workspace = false
command = "cargo"
args = ["run", "--all-features", "--", "worker"]

[tasks.build-container-latest]
description = "Build a release Docker container (using the `latest` tag), including the server and web-client dependencies."
category = "Build"
workspace = false
dependencies = [
  "web-client::release",
  "docker::build-server",
  "docker::build-image-latest"
]

[tasks.build-container-release]
description = "Build a release Docker container (using the tag `v${LATEST_SERVER_TAG}_web-client-v${LATEST_CLIENT_TAG}`), including the server and web-client dependencies."
category = "Build"
workspace = false
dependencies = [
  "web-client::release",
  "docker::build-server",
  "docker::build-image-release"
]

[tasks.push-container-latest]
description = "Push an untagged release Docker container."
category = "Release"
workspace = false
command = "docker"
args = ["push", "${CONTAINER_DEVELOP_IMG}"]
dependencies = ["build-container-latest"]

[tasks.push-container-release]
description = "Push a tagged release Docker."
category = "Release"
workspace = false
command = "docker"
args = ["push", "${CONTAINER_RELEASE_IMG}"]
dependencies = ["build-container-release"]

[tasks."web-client::test"]
description = "Run all tests."
category = "Web Client"
workspace = false
command = "cargo"
args = ["make", "--cwd", "src/web-client", "test"]

[tasks."web-client::watch"]
description = "Watch for file changes and run the debug build task."
category = "Web Client"
workspace = false
command = "cargo"
args = ["make", "--cwd", "src/web-client", "watch"]

[tasks."web-client::release"]
description = "Create a production release build of the static files (Wasm + CSS)."
category = "Web Client"
workspace = false
command = "cargo"
args = ["make", "--cwd", "src/web-client", "release"]

[tasks."test::prettier-1"]
private = true
workspace = false
command = "prettier"
args = ["--check", "*.{graphql,toml,yml,yaml,md}", "!Makefile.toml"]

[tasks."test::prettier-2"]
private = true
workspace = false
command = "prettier"
args = ["--check", "./!(target)/**/*.{graphql,toml,yml,yaml,md}", "!./src/web-client/{target/**/*,Makefile.toml}"]

[tasks."test::fmt"]
private = true
workspace = false
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks."test::build"]
private = true
workspace = false
command = "cargo"
args = ["build", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::clippy"]
private = true
workspace = false
command = "cargo"
args = ["clippy", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::unit"]
private = true
workspace = false
command = "cargo"
args = ["test", "--all", "--bins", "--examples", "--tests", "--benches", "--all-targets", "--all-features"]

[tasks."test::doc"]
private = true
workspace = false
command = "cargo"
args = ["doc", "--all", "--bins", "--all-features", "--no-deps", "--document-private-items"]

[tasks."test::break-cache"]
private = true
workspace = false
command = "find"
args = [".", "(", "-name", "lib.rs", "-o", "-name", "main.rs", ")", "-exec", "touch", "{}", ";"]

[tasks."docker::build-server"]
private = true
workspace = false
command = "docker"
args = [
  "run",
  "--rm",
  "--volume", "cargo-cache:/root/.cargo/registry",
  "--volume", "${CARGO_MAKE_WORKING_DIRECTORY}:/volume",
  "clux/muslrust:stable",
  "cargo", "build", "--bin", "automaat-server", "--release",
]

[tasks."docker::build-image-latest"]
private = true
workspace = false
command = "docker"
args = ["build", "--tag", "${CONTAINER_DEVELOP_IMG}", "${CARGO_MAKE_WORKING_DIRECTORY}"]

[tasks."docker::build-image-release"]
private = true
workspace = false
command = "docker"
args = ["build", "--tag", "${CONTAINER_RELEASE_IMG}", "${CARGO_MAKE_WORKING_DIRECTORY}"]

[tasks.default]
private = true
disabled = true

[tasks.empty]
private = true
disabled = true
